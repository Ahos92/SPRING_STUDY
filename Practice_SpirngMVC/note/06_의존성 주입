
# 의존성 주입 (Dependency Injection, DI)
	
	- 의존성 : 어떤 클래스가 다른 클래스 없이는 동작하지 않는 것 
			(ex - 클래스 A 내부에서 클래스 B의 인스턴스를 생성하여 사용하는 것)
	
	- 어노테이션을 활용하여 스프링이 자원을 자동으로 관리하게끔 설정할 수 있다.
	
		@Component - root-context에서 스프링이 component-scan을 통해 관리하는 클래스
		
		@Autowired - 의존성 주입이 필요할 때마다 spring-context에서 인스턴스를 꺼내준다
				
		@Autowired를 다는 방법
		1. 필드 위에
		2. setter위에 (Lombok 사용시 : @Setter(onMethod_ = {@Autowired}))
		3. 생성자 위에 (Lombok 사용시 : @AllArgsConstructor)
					
					
# spring-test
	
	- 스프링을 이용해 테스트를 진행하기 위해서는 테스트 전에 스프링을 실행 시켜야 한다.
		└스프링을 실행 시키기위한 설정
		@RunWith(SpringJUnit4ClassRunner.class)
			- 스프링 테스트로 실행 하도록 설정
		@ContextConfiguration("file:src/main/webapp/WEB-INF/spring/root-context.xml")
			- 스프링을 실행시키기 위한 설정파일의 경로
		